% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/parallel.R
\name{collectNodes}
\alias{collectNodes}
\title{Collect Nodes}
\usage{
collectNodes(clusters, directory)
}
\arguments{
\item{clusters}{The number of nodes used in parallel.}

\item{directory}{The directory where the \code{k} subdirectories are found. Each \code{k} subdirectory
is named after its node.}
}
\value{
List of \code{k} filenames with full paths.
}
\description{
Collect results run on parallel nodes
}
\details{
If \code{N} simulations were run across \code{k} nodes, then each node will have
the results from approximately \code{N/k} simulations. This function gathers the the locations
of all results into a single list. When you start to run your simulations in parallel, this function
works best if the directory does not already contain results from a previous attempt to run your
simulations. Therefore, if you ran your \code{N} simulations and it has failed, remove the \code{k}
subdirectories and start again.
}
\examples{
# load libraries for parallelization
library(parallel)
library(pbapply)
# load inputs from data
data(inputs)
# Example of input list to generate a two-arm-two-stage trial with binary outcome data
# Run 4 simulations with lapply without parallelization
num.sims <- 4
conf <- lapply(1:num.sims, runSingleTrial, inputs=inputs,  save.plot=FALSE, print=FALSE, directory = '')
# Now run in parallel across two nodes
clusters <- 2
cl <- makeCluster(clusters)
directory <- tempdir()
res.list <- pblapply(1:num.sims, runSingleTrial, inputs=inputs, save.plot=FALSE, directory=directory, cl=cl)
stopCluster(cl)
# now collect the results from the two nodes
collectNodes(clusters, directory)
res.list <- do.call("rbind", res.list)
res.list <- data.frame(res.list)
# now your results are in one list
}
